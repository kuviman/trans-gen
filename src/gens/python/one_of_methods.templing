- let variants = match schema {
-   trans::Schema::OneOf { variants, .. } => variants,
-   _ => unreachable!(),
- };
- for variant in variants {
def {{ variant.name.snake_case(conv) }}(self~
    - for field in &variant.fields {
        ~, {{ field.name.snake_case(conv) }}: {{ type_name(&field.schema) }}~
    - }
~):
    self.{{ call }}({{ type_name(schema) }}.{{ variant.name.camel_case(conv) }}(~
    - for (index, field) in variant.fields.iter().enumerate() {
        - if index != 0 {
            ~, ~
        - }
        ~{{ field.name.snake_case(conv) }}~
    - }
    ~))

- }