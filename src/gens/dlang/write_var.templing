- match schema {
- Schema::Bool | Schema::Int32 | Schema::Int64 | Schema::Float32 | Schema::Float64 | Schema::String => {
writer.write({{ var }});
- }
- Schema::Struct { .. } | Schema::OneOf { .. } => {
{{ var }}.writeTo(writer);
- }
- Schema::Option(inner) => {
if ({{ var }}.isNull()) {
    writer.write(false);
} else {
    writer.write(true);
    - let value_var = format!("{}Value", var); let value_var = &value_var;
    auto {{ value_var }} = {{ var }}.get;
    {{ write_var(value_var, inner) }}
}
- }
- Schema::Vec(inner) => {
writer.write(cast(int)({{ var }}.length));
- let element_var = format!("{}Element", var); let element_var = &element_var;
foreach ({{ element_var }}; {{ var }}) {
    {{ write_var(element_var, inner) }}
}
- }
- Schema::Map(key_type, value_type) => {
writer.write(cast(int)({{ var }}.length));
- let key_var = format!("{}Key", var); let key_var = &key_var;
- let value_var = format!("{}Value", var); let value_var = &value_var;
foreach ({{ key_var }}, {{ value_var }}; {{ var }}) {
    {{ write_var(key_var, key_type) }}
    {{ write_var(value_var, value_type) }}
}
- }
- Schema::Enum { .. } => {
writer.write(cast(int)({{ var }}));
- }
- }