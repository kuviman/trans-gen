namespace {{ &self.main_namespace }}{{ self.namespace_path_suffix(namespace) }}
{
    {{ self.doc_comment(documentation) }}
    public abstract class {{ base_name.camel_case(conv) }}
    {
        {{ self.doc_write_to(&base_name.camel_case(conv)) }}
        public abstract void WriteTo(System.IO.BinaryWriter writer);

        {{ self.doc_read_from(&base_name.camel_case(conv)) }}
        public static {{ base_name.camel_case(conv) }} ReadFrom(System.IO.BinaryReader reader)
        {
            switch (reader.ReadInt32())
            {
                - for variant in variants {
                case {{ variant.name.camel_case(conv) }}.TAG:
                    return {{ variant.name.camel_case(conv) }}.ReadFrom(reader);
                - }
                default:
                    throw new System.Exception("Unexpected tag value");
            }
        }
        - for (tag, variant) in variants.iter().enumerate() {

        {{ self.struct_impl(variant, Some((base_name, tag))) }}
        - }
    }
}