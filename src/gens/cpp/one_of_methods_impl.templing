- let (namespace, variants) = match schema {
-   trans::Schema::OneOf { namespace, variants, .. } => (namespace, variants),
-   _ => unreachable!(),
- };
- for variant in variants {
void DebugInterface::{{ method_name(&variant.name).mixed_case(conv) }}(~
    - for (index, field) in variant.fields.iter().enumerate() {
        - if index != 0 {
            ~, ~
        - }
        ~{{ self.type_name(&field.schema) }} {{ field.name.mixed_case(conv) }}~
    - }
~)
{
    - if self.options.cxx_standard >= 17 {
    - let namespace_path = namespace_path(namespace).map_or(String::new(), |path| path + "::");
    {{ call }}({{ self.type_name(schema) }}({{ namespace_path }}{{ variant.name.camel_case(conv) }}(~
    - } else {
    {{ call }}({{ self.type_name(schema) }}(new {{ name_path(schema) }}::{{ variant.name.camel_case(conv) }}(~
    - }
    - for (index, field) in variant.fields.iter().enumerate() {
        - if index != 0 {
            ~, ~
        - }
        ~{{ field.name.mixed_case(conv) }}~
    - }
    ~)));
}

- }